@using OrderTrackingSystem.ViewModels.Users
@using NonFactors.Mvc.Grid;
@model IEnumerable<GetUsersViewModel>

@{
    ViewBag.Title = "Home";
    var grid = new WebGrid(Model);
}

<h2>Users</h2>

<p>
    @Html.ActionLink("Create", "Create")
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Country)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            &emsp; Action &emsp;
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>


@*@grid.GetHtml(
        tableStyle: "webgrid-table",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        columns:
            grid.Columns(
            grid.Column(columnName: "Name", header: "Name", format: @<text>@item.Name</text>),
grid.Column(columnName: "Title", header: "Title", format: @<text>@item.Title</text> ),
grid.Column(columnName: "Country", header: "Country", format: @<text>@item.Country</text>),
grid.Column(columnName: "City", header: "City", format: @<a>@item.City</a>),
grid.Column(columnName: "Phone", header: "Phone", format: @<text>@item.Phone</text>),
grid.Column(columnName: "Email", header: "Email", format: @<text>@item.Email</text>),
grid.Column(columnName: "Actions", header: "Actions", format: @<text>  @Html.ActionLink("Edit", "Edit", new { id = item.Id }) + " | " + @Html.ActionLink("Delete", "Delete", new { id = item.Id })</text>)

))


}*@

 @*Не получается подключить стили и скрипты для этого Grid*@
@*@{
        Html.Grid(Model).
            Build(columns =>
            {
                columns.Add(model => model.Name).Titled("Name");
                columns.Add(model => model.Title).Titled("Title");
                columns.Add(model => model.Country).Titled("Country");
                columns.Add(model => model.City).Titled("City");
                columns.Add(model => model.Phone).Titled("Phone");
                columns.Add(model => model.Email).Titled("Email");
        //columns.Add(model => Html.ActionLink("Edit", "Edit", new { id = model.Id }) + " | " + Html.ActionLink("Delete", "Delete", new { id = model.Id })).Titled("Actions").Encoded(false); ;

    }).Empty("No data found");
        //.Filterable()
        //.Sortable()
        //.Pageable();
    }*@
